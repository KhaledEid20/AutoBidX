networks:
  mynetwork:
services:
  auction.database:
    image: postgres
    container_name: auction.database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: newpassword
      POSTGRES_DB: auction
    ports:
      - 1234:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auction"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  search.database:
    image: mongo
    container_name: search.mongoDb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    networks:
      - mynetwork    
  eventbus.rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork
  # auction-svc:
  #   image: auction-svc:latest
  #   build:
  #     context: . #from the root of out directory
  #     dockerfile: src/AuctionService/DockerFile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:8080
  #     - RabbitMQ__Host=eventbus.rabbitmq.
  #     - ConnectionStrings__AuctionDbConnection=Host=auction.database;Port=5432;Database=auction;Username=postgres;Password=newpassword
  #     - IdentityServiceUrl=http://identity-svc:6001
  #   ports:
  #     - 7001:8080
  #   depends_on:
  #     - auction.database
  #     - eventbus.rabbitmq
  #   networks:
  #     - mynetwork  
  # search-svc:
  #   image: search-svc:latest
  #   build:
  #     context: . #from the root of out directory
  #     dockerfile: src/SearchService/DockerFile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Devolopment
  #     - ASPNETCORE_URLS=http://+:8080
  #     - RabbitMQ__Host=eventbus.rabbitmq
  #     - ConnectionStrings__MongoConnectionString=mongodb://root:mongopw@search.database
  #   ports:
  #     - 7002:8080
  #   depends_on:
  #     - search.database
  #     - eventbus.rabbitmq
  #   networks:
  #     - mynetwork
  # identity-svc:
  #   restart: always
  #   image: identity-svc:latest
  #   build:
  #     context: . #from the root of out directory
  #     dockerfile: src/IdentityService/DockerFile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Docker
  #     - ASPNETCORE_URLS=http://+:8080
  #     - ConnectionStrings__DefaultConnection=Host=auction.database;Port=5432;Database=Identity;Username=postgres;Password=newpassword
  #   ports:
  #     - 6001:8080
  #   depends_on:
  #     - search.database
  #   networks:
  #     - mynetwork
  # gateway-svc:
  #   image: gateway-svc:latest
  #   build:
  #     context: . #from the root of out directory
  #     dockerfile: src/GatewayService/DockerFile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Docker
  #     - ASPNETCORE_URLS=http://+:8080
  #     - IdentityServiceUrl=http://localhost:6001
  #     - Authentication__Authority=http://localhost:6001
  #   ports:
  #     - 5000:8080
  #   depends_on:
  #     - search.database
  #     - auction-svc
  #   networks:
  #     - mynetwork
volumes:
  postgres_data:
  mongodata: